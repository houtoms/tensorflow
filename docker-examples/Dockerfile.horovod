#
# This example Dockerfile illustrates a method to install Uber's
# horovod extension on top of NVIDIA's TensorFlow container image.
#
# To use this Dockerfile, use the `docker build` command.
# See https://docs.docker.com/engine/reference/builder/
# for more information.
#
FROM nvdl.githost.io:4678/dgx/tensorflow:17.11-devel

RUN apt-get update && apt-get install -y --no-install-recommends \
        libibverbs1 \
        libibverbs-dev \
        libmlx5-1 \
        openssh-client \
        openssh-server \
    && \
    rm -rf /var/lib/apt/lists/*

RUN OPENMPI_VERSION=1.10.3 && \
    wget -q -O - https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-${OPENMPI_VERSION}.tar.gz | tar -xzf - && \
    cd openmpi-${OPENMPI_VERSION} && \
    ./configure --enable-orterun-prefix-by-default --with-cuda --with-verbs \
                --prefix=/usr/local/mpi --disable-getpwuid && \
    make -j"$(nproc)" install && \
    cd .. && rm -rf openmpi-${OPENMPI_VERSION}

ENV PATH /usr/local/mpi/bin:$PATH

RUN mkdir -p /var/run/sshd && \
    mkdir -p /root/.ssh && \
    echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config && \
    echo "UserKnownHostsFile /dev/null" >> /etc/ssh/ssh_config && \
    echo "LogLevel quiet" >> /etc/ssh/ssh_config && \
    sed -i 's/^Port 22/Port 2222/' /etc/ssh/sshd_config && \
    echo "HOST *" > /root/.ssh/config && \
    echo "PORT 2222" > /root/.ssh/config

RUN mkdir -p /root/.ssh && \
    ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -N "" && \
    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
    chmod 700 /root/.ssh && \
    chmod 600 /root/.ssh/*

RUN export HOROVOD_GPU_ALLREDUCE=NCCL && \
    export HOROVOD_NCCL_INCLUDE=/usr/include && \
    export HOROVOD_NCCL_LIB=/usr/lib/x86_64-linux-gnu && \
    ln -s /usr/local/cuda/lib64/stubs/libcuda.so ./libcuda.so.1 && \
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD && \
    pip2 install --no-cache-dir horovod && \
    pip3 install --no-cache-dir horovod && \
    rm ./libcuda.so.1

EXPOSE 2222
