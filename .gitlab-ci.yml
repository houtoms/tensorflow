######################################################
## Variables used by the test runs
######################################################

variables:
    EXTRA_DOCKER_RUN_ARGS: "--shm-size=1G --ulimit memlock=-1 --ulimit stack=$$((1024*65536))"
    DATADIR: /raid/dldata

    # the following will be overridden by jobs of the pipeline that actually need to check out the sources
    GIT_STRATEGY: none
    GIT_SUBMODULE_STRATEGY: none

######################################################
## Build steps.
##    DO NOT MODIFY THIS SECTION
######################################################

stages:
    - build base
    - build devel
    - trigger
    - test
    - staging

#############################
####### Docker builds #######
#############################
before_script:
    - export PYVER=$(echo $CI_JOB_NAME | sed -n 's/\(^\|.*-\)py\([0-9][.0-9]*\)\(-.*\)*$/\2/p');
      if [ -z "${PYVER}" -o "${PYVER}" == "3" ]; then
        export PYVER="3.5";
      elif [ "${PYVER}" == "2" ]; then
        export PYVER="2.7";
      fi;
      echo "${PYVER}"
    - export NV_DOCKER_ARGS="curl -s http://localhost:3476/docker/cli?dev=${RUNNER_GPUS//,/+}"     && echo "${NV_DOCKER_ARGS}"
    - export RELEASE_BRANCH_NAME=${CI_COMMIT_REF_NAME%%-devel}                                     && echo "${RELEASE_BRANCH_NAME}"
    - export IMAGE_NAME_ROOT="${CI_REGISTRY_IMAGE}:${RELEASE_BRANCH_NAME}-py${PYVER%.*}"           && echo "${IMAGE_NAME_PREFIX}"
    - export BASE_IMAGE_NAME="${IMAGE_NAME_ROOT}-base"                                             && echo "${BASE_IMAGE_NAME}"
    - export BASE_IMAGE_NAME_VERSIONED="${IMAGE_NAME_ROOT}.${CI_PIPELINE_ID}"                      && echo "${BASE_IMAGE_NAME_VERSIONED}"
    - export DEVEL_IMAGE_NAME="${IMAGE_NAME_ROOT}-devel"                                           && echo "${DEVEL_IMAGE_NAME}"
    - export DEVEL_IMAGE_NAME_VERSIONED="${IMAGE_NAME_ROOT}.${CI_PIPELINE_ID}-devel"               && echo "${DEVEL_IMAGE_NAME_VERSIONED}"
    - export STAGE_IMAGE_NAME="${IMAGE_NAME_ROOT}-stage"                                           && echo "${STAGE_IMAGE_NAME}"
    - export QA_IMAGE_NAME="${IMAGE_NAME_ROOT}-qa"                                                 && echo "${QA_IMAGE_NAME}"
    - export ORIGIN1="${CI_REPOSITORY_URL##*@}"
    - export ORIGIN_SSH=git@${ORIGIN1/\//:}                                                        && echo "${ORIGIN_SSH}"
    - export ORIGIN_HTTPS=https://${ORIGIN1}                                                       && echo "${ORIGIN_HTTPS}"

.base_template : &BASE
    variables:
      GIT_STRATEGY: fetch
      GIT_SUBMODULE_STRATEGY: recursive
      GET_SOURCES_ATTEMPTS: 3
    script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - echo -e "Dockerfile*\n"
              ".git*\n"
              ".dockerignore\n"
              "RapidSSL_TLS_RSA_CA_G1.crt\n"
              "jetson\n"
              "qa" > .dockerignore
    - docker pull "${BASE_IMAGE_NAME}" || true
    - docker build --pull
                   --cache-from "${BASE_IMAGE_NAME}"
                   -t "${BASE_IMAGE_NAME}" -t "${BASE_IMAGE_NAME_VERSIONED}"
                   --build-arg "NVIDIA_BUILD_REF=${CI_COMMIT_SHA}"
                   --build-arg "NVIDIA_BUILD_ID=${CI_JOB_ID}"
                   --build-arg "PYVER=${PYVER}" .
    - docker push "${BASE_IMAGE_NAME}"
    - docker push "${BASE_IMAGE_NAME_VERSIONED}"
    except:
    - tags
    - schedules

py2-base:
    stage: build base
    <<: *BASE

py3-base:
    stage: build base
    <<: *BASE

.devel_template : &DEVEL
    variables:
      GIT_STRATEGY: fetch
      GIT_SUBMODULE_STRATEGY: recursive
      GET_SOURCES_ATTEMPTS: 3
    script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - echo -e "FROM ${BASE_IMAGE_NAME_VERSIONED}\n"
              "COPY Dockerfile* /opt/${CI_PROJECT_NAME}/\n"
              "COPY .gitignore /opt/${CI_PROJECT_NAME}/\n"
              "COPY .gitmodules /opt/${CI_PROJECT_NAME}/\n"
              "COPY .gitlab-ci.yml /opt/${CI_PROJECT_NAME}/\n"
              "COPY .git/ /opt/${CI_PROJECT_NAME}/.git/\n"
              "COPY RapidSSL_TLS_RSA_CA_G1.crt /usr/local/share/ca-certificates/\n"
              "COPY jetson/   /opt/${CI_PROJECT_NAME}/jetson/\n"
              "COPY qa/   /opt/${CI_PROJECT_NAME}/qa/\n"
              "RUN update-ca-certificates\n"
        > Dockerfile.${CI_PROJECT_NAME}.${CI_COMMIT_REF_NAME}
    - git remote set-url origin ${ORIGIN_HTTPS}
    - docker build --pull -t "${DEVEL_IMAGE_NAME}" -t "${DEVEL_IMAGE_NAME_VERSIONED}"
                   -f Dockerfile.${CI_PROJECT_NAME}.${CI_COMMIT_REF_NAME} .
    - docker push "${DEVEL_IMAGE_NAME}"
    - docker push "${DEVEL_IMAGE_NAME_VERSIONED}"
    except:
    - tags
    - schedules

py2-devel:
    stage: build devel
    <<: *DEVEL

py3-devel:
    stage: build devel
    <<: *DEVEL

digits:
    stage: trigger
    variables:
      GIT_STRATEGY: fetch
      GIT_SUBMODULE_STRATEGY: none
      GET_SOURCES_ATTEMPTS: 3
    script:
    - export REPO="${ORIGIN1/${CI_PROJECT_NAME}/${CI_JOB_NAME}}"
    - export REPO_SSH="${ORIGIN_SSH/${CI_PROJECT_NAME}/${CI_JOB_NAME}}"
    - mkdir triggers
    - cd triggers
    - git config --global user.name "gitlab-runner"
    - git config --global user.email "gitlab-runner@${REPO%%/*}"
    - git config --global push.default simple
    - git clone ${REPO_SSH} --branch ${CI_BUILD_REF_NAME} ${CI_JOB_NAME}
    - cd ${CI_JOB_NAME}
    - git submodule sync
    - git submodule update --init -- ${CI_PROJECT_NAME} || true
    - cd ${CI_PROJECT_NAME}
    - git checkout ${CI_BUILD_REF}
    - cd ..
    - rm -rf triggers
    - git add ${CI_PROJECT_NAME}
    - export FROM1=${ORIGIN1#*/} && export FROM=${FROM1%.git}
    - git commit -m "Trigger update of ${FROM} at ${CI_BUILD_REF:0:8}"
    - git push
    only:
    - /^.*-devel$/
    except:
    - tags
    - schedules
    allow_failure: true

.stage_template : &STAGE
    environment: staging
    variables:
      GIT_STRATEGY: fetch
      GIT_SUBMODULE_STRATEGY: recursive
      GET_SOURCES_ATTEMPTS: 3
    script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    # push a xx.yy-stage tag that records the commit we staged from
    - git remote set-url origin ${ORIGIN_SSH}
    - git push --delete origin refs/tags/${CI_COMMIT_REF_NAME/%-devel/-stage}
    - git push origin HEAD:refs/tags/${CI_COMMIT_REF_NAME/%-devel/-stage}
    # create xx.yy-stage image
    - docker pull "${BASE_IMAGE_NAME_VERSIONED}"
    - docker tag "${BASE_IMAGE_NAME_VERSIONED}" "${STAGE_IMAGE_NAME}"
    - docker push "${STAGE_IMAGE_NAME}"
    # create xx.yy-qa image on top of -stage that adds the qa/* tests back in
    - echo -e "FROM ${STAGE_IMAGE_NAME}\n"
              "COPY qa/   /opt/${CI_PROJECT_NAME}/qa/\n"
        > Dockerfile.${CI_PROJECT_NAME}.${CI_COMMIT_REF_NAME/%-devel/-qa}
    - docker build --pull -t "${QA_IMAGE_NAME}" -f Dockerfile.${CI_PROJECT_NAME}.${CI_COMMIT_REF_NAME/%-devel/-qa} .
    - docker push "${QA_IMAGE_NAME}"
    only:
    - /^.*-devel$/
    except:
    - tags
    - schedules
    when: manual

py2-stage:
    stage: staging
    <<: *STAGE

py3-stage:
    stage: staging
    <<: *STAGE

.test_template: &TEST_TEMPLATE
    environment: "${CI_JOB_NAME}"
    variables:
      TEST_WORK_DIR: "/opt/${CI_PROJECT_NAME}/qa/${CI_JOB_NAME}/"
      TEST_SCRIPT: "./test.sh"
    script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - export RUNNER="${CI_JOB_NAME##*--}"
    - export TEST_WORK_DIR="${TEST_WORK_DIR%%--*}"
    - export TEST_SCRIPT="${TEST_SCRIPT/--$RUNNER.sh/.sh}"
    - export TEST_SCRIPT="${TEST_SCRIPT/--py[23].sh/.sh}"
    - export CONTAINER_NAME="${CI_PROJECT_NAME}.${CI_JOB_ID}.${CI_JOB_NAME}"
    - test "${CI_JOB_NAME:0:3}" == "L3_" && export TEST_TIMEOUT=$((24*60*60)) || export TEST_TIMEOUT=$((3*60*60))
    - echo Test timeout set to $TEST_TIMEOUT seconds
    - cat /proc/driver/nvidia/version
    - docker pull "${DEVEL_IMAGE_NAME_VERSIONED}"
    - ( sleep $TEST_TIMEOUT && echo "******TIMEOUT EXPIRED******" && docker kill "${CONTAINER_NAME}" ) &
      set -x &&
      docker run --rm $(eval ${NV_DOCKER_ARGS})
             --name "${CONTAINER_NAME}"
             -v $DATADIR:/data
             $(eval echo ${EXTRA_DOCKER_RUN_ARGS})
             ${DEVEL_IMAGE_NAME_VERSIONED}
             /bin/bash -c "nvidia-smi && cd ${TEST_WORK_DIR} && exec bash -ex ${TEST_SCRIPT}" || RV=$?;
      set +x;
      pkill -HUP sleep || true;
      exit ${RV:-0}
    tags:
    - must_specify_runner
    except:
    - tags
    - schedules
    allow_failure: false

.manual_test_trigger: &MANUAL_TEST_TRIGGER
    stage: trigger
    script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - export SCOPE1=${CI_JOB_NAME%% tests}; export SCOPE=${SCOPE1##Run all }
    - docker pull ${CI_REGISTRY}/devops/scripts:nvdl_nightly_test_scheduler
    - docker run --rm ${CI_REGISTRY}/devops/scripts:nvdl_nightly_test_scheduler ${CI_PIPELINE_ID} ${CI_PROJECT_PATH} ${SCOPE}
    except:
    - tags
    - schedules
    when: manual

.L0_test: &L0_TEST
    stage: test
    <<: *TEST_TEMPLATE

.L1_test: &L1_TEST
    stage: test
    <<: *TEST_TEMPLATE
    when: manual
    allow_failure: true

.L2_test: &L2_TEST
    stage: test
    <<: *TEST_TEMPLATE
    when: manual
    allow_failure: true

.L3_test: &L3_TEST
    stage: test
    <<: *TEST_TEMPLATE
    when: manual
    allow_failure: true

"Run all L1 tests":
    <<: *MANUAL_TEST_TRIGGER

"Run all L2 tests":
    <<: *MANUAL_TEST_TRIGGER

.P100_R384_4GPU: &P100_R384_4GPU
    tags:
    - P100
    - R384
    - 4GPU

.V100_R384_1GPU: &V100_R384_1GPU
    tags:
    - V100
    - R384
    - 1GPU

.V100_R384_4GPU: &V100_R384_4GPU
    tags:
    - V100
    - R384
    - 4GPU

.V100_R384_8GPU: &V100_R384_8GPU
    tags:
    - V100
    - R384
    - 8GPU

.P40_R384_1GPU: &P40_R384_1GPU
    tags:
    - P40
    - R384
    - 1GPU
    only:
    - /^.*-devel$/

.P40_R384_2GPU: &P40_R384_2GPU
    tags:
    - P40
    - R384
    - 2GPU
    only:
    - /^.*-devel$/

.M40_R384_1GPU: &M40_R384_1GPU
    tags:
    - M40
    - R384
    - 1GPU
    only:
    - /^.*-devel$/

.M40_R384_2GPU: &M40_R384_2GPU
    tags:
    - M40
    - R384
    - 2GPU
    only:
    - /^.*-devel$/

.TX2: &TX2
    tags:
    - TX2

.XAVIER: &XAVIER
    tags:
    - XAVIER

.V100_R410_16GPU: &V100_R410_16GPU
    tags:
    - V100
    - R410
    - 16GPU

.TU102_R410_1GPU: &TU102_R410_1GPU
    tags:
    - TU102
    - R410
    - 1GPU

############################
####### Wheel builds #######
############################

.base_template_wheel_metal: &BASE_WHEEL_METAL
    variables:
      GIT_STRATEGY: fetch
      GIT_SUBMODULE_STRATEGY: recursive
      GET_SOURCES_ATTEMPTS: 3
    script:
    - export TARGET=${TARGET:-$(echo ${CI_JOB_NAME} | cut -d - -f 1)}
    - ./${TARGET}/build_pip_whl.sh
    artifacts:
      name: "${CI_JOB_NAME}"
      paths:
      - wheelhouse/*.whl
      expire_in: 1 month
    only:
    - schedules

jetson-tx2-py2-wheel:
    stage: build base
    <<: *BASE_WHEEL_METAL
    <<: *TX2

jetson-tx2-py3-wheel:
    stage: build base
    <<: *BASE_WHEEL_METAL
    <<: *TX2

jetson-xavier-py2-wheel:
    stage: build base
    <<: *BASE_WHEEL_METAL
    <<: *XAVIER

jetson-xavier-py3.6-wheel:
    stage: build base
    <<: *BASE_WHEEL_METAL
    <<: *XAVIER

.test_template_wheel_metal: &TEST_TEMPLATE_WHEEL_METAL
    variables:
      GIT_STRATEGY: fetch
      GIT_SUBMODULE_STRATEGY: recursive
      GET_SOURCES_ATTEMPTS: 3
      TEST_WORK_DIR: "./qa/${CI_JOB_NAME}/"
      TEST_SCRIPT: "./test.sh"
    script:
    - export RUNNER="${CI_JOB_NAME##*--}"
    - export TEST_WORK_DIR="${TEST_WORK_DIR%%--*}"
    - export TEST_SCRIPT="${TEST_SCRIPT/--$RUNNER.sh/.sh}"
    - export TEST_SCRIPT="${TEST_SCRIPT/--py[23].sh/.sh}"
    - export PIP_PACKAGE_NAME="${CI_PROJECT_NAME}-gpu"
    - set -x &&
      python${PYVER} -m virtualenv ./tf_env &&
      source ./tf_env/bin/activate &&
      pip install --find-links=file://$PWD/wheelhouse ${PIP_PACKAGE_NAME} &&
      cd ${TEST_WORK_DIR} &&
      exec bash -ex ${TEST_SCRIPT} || RV=$?;
      set +x;
      exit ${RV:-0}
    tags:
    - must_specify_runner
    only:
    - schedules
    allow_failure: false

.nightly_test: &NIGHTLY_TEST
    stage: test
    <<: *TEST_TEMPLATE_WHEEL_METAL

######################################################
##
## Test definitions.
##
##   By convention, test names should be prefixed
##   with "L0_" or "L1_" etc.
##
##   Normally qa/ will be a submodule that pulls in
##   all of the stuff needed to run the tests into the
##   *-devel images.
##
##   The CI script templates above expect each test to
##   be defined in /opt/<project>/qa/<testname>/test.sh.
##   This behavior is specified by the variables
##   $TEST_WORK_DIR and $TEST_SCRIPT.  You can override
##   either of those variables for a given test, but if
##   you do, you have to override them both together,
##   like this:
##
##   L0_mytest:
##      <<: *L0_TEST
##      variables:
##        TEST_WORK_DIR: "/some/other/path"
##        TEST_SCRIPT: "./test.sh"
##
######################################################

############################################################
## TEMPLATES
##
.L2_cnn_benchmarks: &L2_CNN_BENCHMARK
    <<: *L2_TEST
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L2_cnn_benchmarks"
      TEST_SCRIPT: "./${CI_JOB_NAME}.sh"
##
.L3_cnn_convergence: &L3_CNN_CONVERGENCE
    <<: *L3_TEST
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L3_cnn_convergence"
      TEST_SCRIPT: "./${CI_JOB_NAME}.sh"
##
############################################################

L0_verify_sig:
    <<: *L0_TEST
    tags:
    - 1GPU

L0_tensorboard:
    <<: *L0_TEST
    tags:
    - 1GPU

#### P100_R384_4GPU ####

L0_compat_lib--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L0_models_alexnet--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L0_horovod_self_test--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L0_models_imagenet--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L0_models_mnist--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L0_convnet_benchmarks_alexnet--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-alexnet.sh"

L0_convnet_benchmarks_googlenet--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-googlenet.sh"

L0_convnet_benchmarks_overfeat--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-overfeat.sh"

L0_convnet_benchmarks_vgga--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-vgga.sh"

L0_seq2seq--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L0_tftrt--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L0_python_kernel_tests--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L1_inference_tf--P100_R384_4GPU:
    <<: *L1_TEST
    <<: *P100_R384_4GPU

L1_inference_tftrt--P100_R384_4GPU:
    <<: *L1_TEST
    <<: *P100_R384_4GPU


L1_tftrt_extended_tests--py2--P100_R384_4GPU:
    <<: *L1_TEST
    <<: *P100_R384_4GPU

####  NVIDIA CNN TESTS  ####
L0_resnet_sanity--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L0_resnet_dali_sanity--P100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L1_cnn_sanity--P100_R384_4GPU:
    <<: *L1_TEST
    <<: *P100_R384_4GPU

L2_bench_alexnet--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_googlenet--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_inception_v3--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_inception_v4--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_inception_resnet_v2--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_overfeat--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_resnet50--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_resnet101--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_resnet152--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_vgg11--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_vgg16--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU

L2_bench_vgg19--P100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P100_R384_4GPU
############################

L1_word2vec--P100_R384_4GPU:
    <<: *L1_TEST
    <<: *P100_R384_4GPU

L1_self_test--P100_R384_4GPU:
    <<: *L1_TEST
    <<: *P100_R384_4GPU

L1_self_test_xla--P100_R384_4GPU:
    <<: *L1_TEST
    <<: *P100_R384_4GPU

L1_nccl_test--P100_R384_4GPU:
    <<: *L1_TEST
    <<: *P100_R384_4GPU

L1_seq2seq--P100_R384_4GPU:
    <<: *L1_TEST
    <<: *P100_R384_4GPU

L2_seq2seq--P100_R384_4GPU:
    <<: *L2_TEST
    <<: *P100_R384_4GPU

L2_models_cifar10--P100_R384_4GPU:
    <<: *L2_TEST
    <<: *P100_R384_4GPU

#### V100_R410_16GPU ####

####  NVIDIA CNN TESTS  ####

L2_bench_inception_v4--V100_R410_16GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R410_16GPU

L2_bench_resnet50--V100_R410_16GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R410_16GPU

L3_converge_resnet50--V100_R410_16GPU:
    <<: *L3_CNN_CONVERGENCE
    <<: *V100_R410_16GPU

############################

L1_self_test--V100_R410_16GPU:
    <<: *L1_TEST
    <<: *V100_R410_16GPU


#### TU102_R410_1GPU ####

####  NVIDIA CNN TESTS  ####

L2_bench_inception_v4--TU102_R410_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *TU102_R410_1GPU

L2_bench_resnet50--TU102_R410_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *TU102_R410_1GPU

############################

L1_self_test--TU102_R410_1GPU:
    <<: *L1_TEST
    <<: *TU102_R410_1GPU

L2_inference_bench--TU102_R410_1GPU:
    <<: *L2_TEST
    <<: *TU102_R410_1GPU

L2_inference_bench_synthetic--TU102_R410_1GPU:
    <<: *L2_TEST
    <<: *TU102_R410_1GPU

#### V100_R384_4GPU Python 3 ####

L0_compat_lib--V100_R384_4GPU:
    <<: *L0_TEST
    <<: *V100_R384_4GPU

L0_models_alexnet--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L0_horovod_self_test--V100_R384_4GPU:
    <<: *L0_TEST
    <<: *V100_R384_4GPU

L0_models_imagenet--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L0_models_mnist--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L0_convnet_benchmarks_alexnet--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-alexnet.sh"

L0_convnet_benchmarks_googlenet--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-googlenet.sh"

L0_convnet_benchmarks_overfeat--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-overfeat.sh"

L0_convnet_benchmarks_vgga--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-vgga.sh"

L0_seq2seq--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L0_tftrt--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L0_python_kernel_tests--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L1_inference_tf--V100_R384_1GPU:
    <<: *L1_TEST
    <<: *V100_R384_1GPU

L1_inference_tftrt--V100_R384_1GPU:
    <<: *L1_TEST
    <<: *V100_R384_1GPU

L1_inference_tftrt_fp16--V100_R384_1GPU:
    <<: *L1_TEST
    <<: *V100_R384_1GPU

L1_inference_tftrt_int8--V100_R384_1GPU:
    <<: *L1_TEST
    <<: *V100_R384_1GPU

####  NVIDIA CNN TESTS  ####
L0_resnet_sanity--V100_R384_4GPU:
    <<: *L0_TEST
    <<: *V100_R384_4GPU

L0_resnet_dali_sanity--V100_R384_4GPU:
    <<: *L0_TEST
    <<: *V100_R384_4GPU

L1_cnn_sanity--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

L2_bench_alexnet--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_googlenet--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_inception_v3--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_inception_v4--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_inception_resnet_v2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_overfeat--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_resnet50--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_resnet101--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_resnet152--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_vgg11--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_vgg16--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_vgg19--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L3_converge_resnet50--V100_R384_8GPU:
    <<: *L3_CNN_CONVERGENCE
    <<: *V100_R384_8GPU

L3_converge_inception_v3--V100_R384_8GPU:
    <<: *L3_CNN_CONVERGENCE
    <<: *V100_R384_8GPU

############################

L1_word2vec--V100_R384_1GPU:
    <<: *L1_TEST
    <<: *V100_R384_1GPU

L1_self_test--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

L1_self_test_xla--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

L1_nccl_test--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

L1_seq2seq--V100_R384_1GPU:
    <<: *L1_TEST
    <<: *V100_R384_1GPU

L2_seq2seq--V100_R384_4GPU:
    <<: *L2_TEST
    <<: *V100_R384_4GPU

L2_models_cifar10--V100_R384_4GPU:
    <<: *L2_TEST
    <<: *V100_R384_4GPU

L2_inference_bench--V100_R384_1GPU:
    <<: *L2_TEST
    <<: *V100_R384_4GPU

L2_inference_bench_synthetic--V100_R384_1GPU:
    <<: *L2_TEST
    <<: *V100_R384_4GPU

#### V100_R384_4GPU Python 2 ####

L0_models_alexnet--py2--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L0_horovod_self_test--py2--V100_R384_4GPU:
    <<: *L0_TEST
    <<: *P100_R384_4GPU

L0_models_imagenet--py2--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L0_models_mnist--py2--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L0_convnet_benchmarks_alexnet--py2--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-alexnet.sh"

L0_convnet_benchmarks_googlenet--py2--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-googlenet.sh"

L0_convnet_benchmarks_overfeat--py2--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-overfeat.sh"

L0_convnet_benchmarks_vgga--py2--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-vgga.sh"

L0_seq2seq--py2--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L0_tftrt--py2--V100_R384_1GPU:
    <<: *L0_TEST
    <<: *V100_R384_1GPU

L1_tftrt_extended_tests--py2--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

####  NVIDIA CNN TESTS  ####
L0_resnet_sanity--py2--V100_R384_4GPU:
    <<: *L0_TEST
    <<: *V100_R384_4GPU

L0_resnet_dali_sanity--py2--V100_R384_4GPU:
    <<: *L0_TEST
    <<: *V100_R384_4GPU

L1_cnn_sanity--py2--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

L2_bench_alexnet--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_googlenet--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_inception_v3--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_inception_v4--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_inception_resnet_v2--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_overfeat--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_resnet50--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_resnet101--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_resnet152--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_vgg11--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_vgg16--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU

L2_bench_vgg19--py2--V100_R384_4GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *V100_R384_4GPU
############################

L1_word2vec--py2--V100_R384_1GPU:
    <<: *L1_TEST
    <<: *V100_R384_1GPU

L1_self_test--py2--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

L1_self_test_xla--py2--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

L1_nccl_test--py2--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

L1_seq2seq--py2--V100_R384_4GPU:
    <<: *L1_TEST
    <<: *V100_R384_4GPU

L2_models_cifar10--py2--V100_R384_4GPU:
    <<: *L2_TEST
    <<: *V100_R384_4GPU

L2_inference_bench--py2--V100_R384_1GPU:
    <<: *L2_TEST
    <<: *V100_R384_4GPU

L2_inference_bench_synthetic--py2--V100_R384_1GPU:
    <<: *L2_TEST
    <<: *V100_R384_4GPU

#### P40_R384_1GPU ####

L0_models_alexnet--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU

L0_horovod_self_test--P40_R384_2GPU:
    <<: *L0_TEST
    <<: *P40_R384_2GPU

L0_models_imagenet--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU

L0_models_mnist--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU

L0_convnet_benchmarks_alexnet--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-alexnet.sh"

L0_convnet_benchmarks_googlenet--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-googlenet.sh"

L0_convnet_benchmarks_overfeat--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-overfeat.sh"

L0_convnet_benchmarks_vgga--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-vgga.sh"

L0_seq2seq--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU

L0_tftrt--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU

L0_python_kernel_tests--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU

####  NVIDIA CNN TESTS  ####
L0_resnet_sanity--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU

L0_resnet_dali_sanity--P40_R384_1GPU:
    <<: *L0_TEST
    <<: *P40_R384_1GPU

L1_cnn_sanity--P40_R384_1GPU:
    <<: *L1_TEST
    <<: *P40_R384_1GPU

L2_bench_alexnet--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_googlenet--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_inception_v3--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_inception_v4--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_inception_v4--TU102_R410_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *TU102_R410_1GPU

L2_bench_inception_resnet_v2--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_overfeat--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_resnet50--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_resnet50--TU102_R410_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *TU102_R410_1GPU

L2_bench_resnet101--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_resnet152--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_vgg11--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_vgg16--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU

L2_bench_vgg19--P40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *P40_R384_1GPU
############################

L1_word2vec--P40_R384_1GPU:
    <<: *L1_TEST
    <<: *P40_R384_1GPU

L1_self_test--P40_R384_2GPU:
    <<: *L1_TEST
    <<: *P40_R384_2GPU

L1_self_test_xla--P40_R384_2GPU:
    <<: *L1_TEST
    <<: *P40_R384_2GPU

L2_models_cifar10--P40_R384_1GPU:
    <<: *L2_TEST
    <<: *P40_R384_1GPU

L2_inference_bench--P40_R384_1GPU:
    <<: *L2_TEST
    <<: *P40_R384_1GPU

L2_inference_bench_synthetic--P40_R384_1GPU:
    <<: *L2_TEST
    <<: *P40_R384_1GPU

#### M40_R384_1GPU ####

L0_models_alexnet--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU

L0_horovod_self_test--M40_R384_2GPU:
    <<: *L0_TEST
    <<: *M40_R384_2GPU

L0_models_imagenet--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU

L0_models_mnist--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU

L0_convnet_benchmarks_alexnet--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-alexnet.sh"

L0_convnet_benchmarks_googlenet--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-googlenet.sh"

L0_convnet_benchmarks_overfeat--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-overfeat.sh"

L0_convnet_benchmarks_vgga--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU
    variables:
      TEST_WORK_DIR: "/opt/tensorflow/qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-vgga.sh"

L0_tftrt--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU

L0_python_kernel_tests--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU

####  NVIDIA CNN TESTS  ####
L0_resnet_sanity--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU

L0_resnet_dali_sanity--M40_R384_1GPU:
    <<: *L0_TEST
    <<: *M40_R384_1GPU

L1_cnn_sanity--M40_R384_1GPU:
    <<: *L1_TEST
    <<: *M40_R384_1GPU

L2_bench_alexnet--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_googlenet--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_inception_v3--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_inception_v4--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_inception_resnet_v2--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_overfeat--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_resnet50--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_resnet101--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_resnet152--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_vgg11--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_vgg16--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU

L2_bench_vgg19--M40_R384_1GPU:
    <<: *L2_CNN_BENCHMARK
    <<: *M40_R384_1GPU
############################

L1_word2vec--M40_R384_1GPU:
    <<: *L1_TEST
    <<: *M40_R384_1GPU

L1_self_test--M40_R384_2GPU:
    <<: *L1_TEST
    <<: *M40_R384_2GPU

L1_self_test_xla--M40_R384_2GPU:
    <<: *L1_TEST
    <<: *M40_R384_2GPU

L2_models_cifar10--M40_R384_1GPU:
    <<: *L2_TEST
    <<: *M40_R384_1GPU

#### TX2 ####

L0_models_alexnet--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L0_models_imagenet--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L0_models_mnist--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L0_convnet_benchmarks_alexnet--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2
    variables:
      TEST_WORK_DIR: "./qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-alexnet.sh"

L0_convnet_benchmarks_googlenet--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2
    variables:
      TEST_WORK_DIR: "./qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-googlenet.sh"

L0_convnet_benchmarks_overfeat--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2
    variables:
      TEST_WORK_DIR: "./qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-overfeat.sh"

L0_convnet_benchmarks_vgga--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2
    variables:
      TEST_WORK_DIR: "./qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-vgga.sh"

L0_tftrt--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L0_python_kernel_tests--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L1_self_test--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L1_self_test_xla--py3--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L0_models_alexnet--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L0_models_imagenet--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L0_models_mnist--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L0_tftrt--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L0_python_kernel_tests--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L1_inference_tf--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L1_inference_tftrt--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L1_inference_tftrt_fp16--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L2_inference_bench--py3.6--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L2_inference_bench_synthetic--py3.6--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L2_inference_bench--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

L2_inference_bench_synthetic--py2--TX2:
    <<: *NIGHTLY_TEST
    <<: *TX2

#### XAVIER ####

L0_models_alexnet--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L0_models_imagenet--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L0_models_mnist--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L0_convnet_benchmarks_alexnet--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER
    variables:
      TEST_WORK_DIR: "./qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-alexnet.sh"

L0_convnet_benchmarks_googlenet--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER
    variables:
      TEST_WORK_DIR: "./qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-googlenet.sh"

L0_convnet_benchmarks_overfeat--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER
    variables:
      TEST_WORK_DIR: "./qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-overfeat.sh"

L0_convnet_benchmarks_vgga--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER
    variables:
      TEST_WORK_DIR: "./qa/L0_convnet_benchmarks"
      TEST_SCRIPT: "./test-vgga.sh"

L0_tftrt--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L0_python_kernel_tests--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L1_self_test--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L1_self_test_xla--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L0_models_alexnet--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L0_models_imagenet--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L0_models_mnist--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L0_tftrt--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L0_python_kernel_tests--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L1_inference_tf--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L1_inference_tftrt--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L1_inference_tftrt_fp16--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L2_inference_bench--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L2_inference_bench_synthetic--py3.6--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L2_inference_bench--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER

L2_inference_bench_synthetic--py2--XAVIER:
    <<: *NIGHTLY_TEST
    <<: *XAVIER
